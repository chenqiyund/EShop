1. 包结构：
    base:工具类、自定义的视图、基类
    feature:Activity、Fragment、适配器等页面实现需要的内容：页面Activity等
            根据内部的页面或功能分包
    network:数据：服务器的接口、实体类等网络请求方面的数据内容

2. 在这个项目里面我们加入一个内存泄漏监测的工具：LeakCanary
    1. 添加依赖：github搜索
        debugCompile 'com.squareup.leakcanary:leakcanary-android:1.5'
        releaseCompile 'com.squareup.leakcanary:leakcanary-android-no-op:1.5'
        testCompile 'com.squareup.leakcanary:leakcanary-android-no-op:1.5'

    2. 创建Application，要在清单文件里面指定，并且实现LeakCanary的初始化

        if (LeakCanary.isInAnalyzerProcess(this)) {

                    // 这个是用于分析内存的线程，我们不能再这里面初始化我们项目
                    return;
                }
                LeakCanary.install(this);

                // 正常的app初始化
                // 正常的app初始化


总结：
 1. AS Git
 2. Butterknife
 3. 分包的包结构，资源的介绍
 4. 内存泄漏监测工具的添加
 5. 实现了Spalsh页面的效果：图片设置透明度的动画，跳转页面设置转场效果
 任务：实现Spalsh页面。
 明天：主页面搭建：第三方的控件

 主页面：
 1. 底部导航栏：BottomBar
     1. 添加依赖：compile 'com.roughike:bottom-bar:2.1.1'
     2. 创建一个xml的文件：res/xml/bottom_bar.xml
     3. 布局中使用
     4. 在代码里面设置监听事件

2. Fragment 切换

总结：
1. 反馈的问题解答：动画、内存泄漏
2. 主页面：BottomBar，Fragment的切换
3. 消息的结构。
任务：主页面一定要完成
明天：网络：OkHttp



总结：
OkHttp网络请求
1. OkHttp的基本的使用：流程一定要清楚。
2. Call模型：概念、Call的取消
3. 拦截器的功能：httploggingInterceptor
    1. 依赖 2. 设置给OkHttpClient
4. callback不能更新UI，处理：自定义一个UiCallback
5. Okhttp加入到了项目中
6. 构建了一个商品分类的接口，新的知识：单元测试。
7. 创建分类的Fragment，处理了一下Toolbar的展示
任务：
OkHttp的使用一定要掌握！！
商品分类的接口构建要完成。
创建好分类页面，处理一下布局
预习：可以试着展示一下
明天：完成分类页面，做一些封装基类。



基类：Activity、Fragment、adapter

总结：分类页面的搭建和基类封装
任务：分类的页面、基类的封装多理解
首页


首页的搭建：
1. 首页的数据的请求构建
2. 一个轮播图和ListView

1. 封装一个轮播图：组合控件来自定义视图
    Viewpager
    CircleIndicator:
          1. 添加依赖：compile 'me.relex:circleindicator:1.2.2@aar'
          2. 使用
2. 封装的实现效果：

2. 封装的实现效果

总结：
1. 构建首页的数据及测试
2. 自定义BannerLayout
    1. 第三方的控件
    2. 组合控件的模式来自定义
    3. 轮播的效果：计时器
3. 适配器
    ViewPager的PagerAdapter
    为了更加的广泛适用，封装了一下
    ViewHolder,结合BaseAdapter的ViewHolder模式
4. 创建了HomeFragment，测试了一下我们做的轮播图是不是正确。
任务：
完成。
明天：首页的实现。

1. 首页：功能实现
2. 刷新和加载的控件：
    1. 添加依赖的：compile 'in.srain.cube:ptr-load-more:1.0.2'
3. 首页数据获取和展示
4. 吐司、Toolbar的展示、刷新控件封装
5. 商品搜索页面

总结：
首页：布局搭建和实现
任务：
1. 首页完整的做出来
2. 封装，旧代码替换一下
3. 商品搜索搜索页面的接口构建及测试

明天：
网络请求封装



